services:
  api:
    image: api
    build:
      context: .
      dockerfile: API/Dockerfile

  postgres:
    image: postgres:15
    container_name: postgres_data
    restart: always
    env_file: ../.env
    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: "leadlists"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    env_file: ../.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "${RABBITMQ_PORT}:5672"     # conexão AMQP
      - "${RABBITMQ_UI_PORT}:15672" # painel web
#    volumes:
#      - rabbitmq_data:/var/lib/rabbitmq



volumes:
  postgres_data:
#  rabbitmq_data:
